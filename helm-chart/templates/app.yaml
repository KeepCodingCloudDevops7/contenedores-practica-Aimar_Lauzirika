apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpl-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: 
                  - pod-mysql
              topologyKey: "topology.kubernetes.io/hostname"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: 
                  - webapp
              topologyKey: "topology.kubernetes.io/hostname"
      containers:
      - name: flask-counter
        image: aimarlauzirika/flask-counter:0.1
        ports:
        - containerPort: 5000
        resources:
          limits:
            cpu: "0.6"
            memory: "200Mi"
          requests:
            cpu: "0.3"
            memory: "100Mi"
        env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_DATABASE
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_HOST
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-svc
spec:
  # type: NodePort
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      # nodePort: 30100