apiVersion: v1
kind: Service
metadata:
  name: svc-db-{{ include "charts.fullname" . }}
  labels:
    {{- include "charts.labels" . | nindent 4}}
spec:
  ports:
  - port: 3306
  clusterIP: None
  selector:
    {{- include "charts.labels" . | nindent 4}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sfs-bbdd-{{ include "charts.fullname" . }}
spec:
  replicas: 1
  serviceName: "db"
  selector:
    matchLabels:
      {{- include "charts.labels" . | nindent 6}}
  template:
    metadata:
      labels:
        {{- include "charts.labels" . | nindent 8}}
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: 
                  - webapp
              topologyKey: "topology.kubernetes.io/hostname"
      containers:
      - name: mysqldb
        image: mysql:{{ .Values.mysqlVersion }}
        ports:
        - containerPort: 3306
        envFrom:
        - secretRef:
            name: secret-{{ include "charts.fullname" . }}
        volumeMounts:
        - name: mount-initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: data-db
          mountPath: /var/lib/mysql
        resources:
          limits:
            cpu: {{ .Values.dbResources.limits.cpu }}
            memory: {{ .Values.dbResources.limits.memory }}
          requests:
            cpu: {{ .Values.dbResources.requests.cpu }}
            memory: {{ .Values.dbResources.requests.memory }}
      volumes:
      - name: mount-initdb
        configMap:
          name: cm-{{ include "charts.fullname" . }}
          items:
          - key: init_db.sh
            path: init_db.sh
  volumeClaimTemplates:
  - metadata:
      name: data-db
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi

